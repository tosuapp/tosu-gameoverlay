name: build & deploy

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*"
    paths:
      - ".github/workflows/**/*"
      - "tosu_injector/**/*"
      - "tosu_overlay/**/*"
      - "CMakeLists.txt"
  pull_request:
    paths:
      - "tosu_injector/**/*"
      - "tosu_overlay/**/*"
      - "CMakeLists.txt"

concurrency:
  group: build-${{ github.sha }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [ windows-latest ]

    runs-on: ${{ matrix.os }}

    name: "build for ${{ matrix.os }}"
    steps:
      - name: üõéÔ∏è - Checkout
        uses: actions/checkout@v3

      - name: üìê - Define variables (1)
        if: github.event_name == 'pull_request'
        id: set-pr-sha
        shell: bash
        run: echo "SHORT_PR_SHA=$(git rev-parse HEAD | cut -c 1-7)" >> "$GITHUB_OUTPUT"

      - name: üõ†Ô∏è Chocolatey - Install Ninja
        uses: crazy-max/ghaction-chocolatey@v3
        with:
          args: install ninja

      - name: üì¶ - Build (cef exe)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DDESKTOP=1 -B build
          ninja -C build

      - name: üì¶ - Build (cef dll)
        if: ${{ matrix.os == 'windows-latest' }}
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars32.bat"
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DDESKTOP=0 -B build
          ninja -C build

      - name: üöÄ - Upload artifacts for windows
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/upload-artifact@v4
        with: {
          name: "tosu-overlay-${{ steps.set-pr-sha.outputs.SHORT_PR_SHA || github.ref_name }}",
          path: build/tosu_overlay/Release/**/*
        }

      # - name: üöÄ - Upload artifacts for mac
      #   if: matrix.os == 'macos-latest'
      #   uses: actions/upload-artifact@v3
      #   with: {
      #     name: "${{ steps.set-artifact-name.outputs.ARTIFACT_NAME }}",
      #     path: packages/tosu/dist/tosu.exe
      #   }
